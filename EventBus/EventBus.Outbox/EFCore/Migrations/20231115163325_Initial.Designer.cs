// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Tsw.EventBus.Outbox;

#nullable disable

namespace Tsw.EventBus.Outbox.EFCore.Migrations
{
    [DbContext(typeof(IntegrationEventLogDbContext))]
    [Migration("20231115163325_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-rc.2.23480.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("IntegrationEventState", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("Id");

                    b.ToTable("IntegrationEventStates", (string)null);

                    b.HasData(
                        new
                        {
                            Id = (short)1,
                            Name = "NotPublished"
                        },
                        new
                        {
                            Id = (short)2,
                            Name = "InProgress"
                        },
                        new
                        {
                            Id = (short)3,
                            Name = "Published"
                        },
                        new
                        {
                            Id = (short)4,
                            Name = "PublishedFailed"
                        });
                });

            modelBuilder.Entity("Tsw.EventBus.Outbox.Common.IntegrationEventLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EventTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<short>("State")
                        .HasColumnType("smallint");

                    b.Property<int>("TimesSent")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("IntegrationEventLogs", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
